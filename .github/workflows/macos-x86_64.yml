# Copyright (c) 2021-2024 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The purpose of this workflow is to check that build procedures work correctly
# in specific environment. Due to this reason there is no caching. It is done by
# intention. All caching is in upstream projects.

name: MacOS-x86_64

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/alpine-x86_64.yml'
      - '.github/workflows/ubuntu-x86_64.yml'
      - '.github/workflows/ubuntu-aarch64.yml'
      - '.github/workflows/msys-x86_64.yml'
      - '.github/workflows/windows-x86_64.yml'
      - '.github/workflows/macos-arm64.yml'
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  BUILD_TYPE: Release
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/cache

jobs:
  build-and-test:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install packages
      run: |
        brew install argp-standalone coreutils
        brew tap LouisBrunner/valgrind
        brew install --HEAD LouisBrunner/valgrind/valgrind

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test well formed files
      working-directory: ${{ github.workspace }}
      run: ./tests/resources/check_correctness.sh -r -s

    - name: Test corrupted files
      working-directory: ${{ github.workspace }}
      run: ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-corrupted/ -xN

    - name: Test EA files
      working-directory: ${{ github.workspace }}
      run: ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-ea/

  build-for-ruby:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup environment
      run: |
        echo 'BREW_HOME<<EOF' >> $GITHUB_ENV
        brew --prefix >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Install packages
      run: brew install bash

    - name: Create cache storage and cache key
      run: |
        mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        git submodule status > sm.txt

    - name: Process cache
      uses: actions/cache@v4
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        key: ${{ github.workflow }}-vcpkg-${{ hashFiles('sm.txt') }}

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}    \
                 -DVCPKG_TARGET_TRIPLET=x64-osx              \
                 -DLONLY=ON                                  \
                 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Checkout shell test framework
      uses: actions/checkout@v4
      with:
        repository: kward/shunit2
        path: tests/shunit2
        fetch-depth: 1

    - name: Run additional tests
      run: ${{ env.BREW_HOME }}/bin/bash  tests/resources/lcheck.sh
