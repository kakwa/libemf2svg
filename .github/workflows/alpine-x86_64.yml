name: Alpine-x86_64

on:
  push:
    paths-ignore:
      - '.github/workflows/macos-x86_64.yml'
      - '.github/workflows/macos-arm64.yml'
      - '.github/workflows/ubuntu-x86_64.yml'
      - '.github/workflows/ubuntu-aarch64.yml'
      - '.github/workflows/windows-build.yml'
  pull_request:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  VCPKG_FORCE_SYSTEM_BINARIES: 1
  CC: gcc
  CXX: g++

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest

    steps:
    - name: Install packages
      run: |
        apk --no-cache --upgrade add build-base cmake git valgrind tar argp-standalone \
          gcompat gperf flex bison gettext-dev python3 ninja zip unzip curl pkgconfig  \
          libxml2-utils font-noto-hebrew font-noto-arabic

# vcpkg prerequisites (and VCPKG_FORCE_SYSTEM_BINARIES: 1)
#  gcompat gperf flex bison gettext-dev python3 ninja zip unzip curl pkg-config
# testing prerequisites
#  libxml2-utils 
# [ tests/resources/emf/test-183.emf ] -- font-noto-hebrew font-noto-arabic 

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure cache
      run: |
        echo 'VCPKG_DEFAULT_BINARY_CACHE<<EOF' >> $GITHUB_ENV
        echo "$(pwd)/cache" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Create cache storage and cache key
      run: |
        mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        git submodule status > sm.txt

    - name: Process cache
      uses: actions/cache@v2
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        key: ${{ github.workflow }}-vcpkg-${{ hashFiles('sm.txt') }}-2

    - name: Configure CMake
      run: |
        cmake -B . -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-linux -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Test well formed files
      run: ./tests/resources/check_correctness.sh -r -s

    - name: Test corrupted files
      run: ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-corrupted/ -xN

    - name: Test EA files
      run: ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-ea/

  build-for-ruby:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest

    steps:
    - name: Install packages
      run: |
        apk --no-cache --upgrade add build-base cmake git valgrind tar bash            \
          gcompat gperf flex bison gettext-dev python3 ninja zip unzip curl pkgconfig  

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure cache
      run: |
        echo 'VCPKG_DEFAULT_BINARY_CACHE<<EOF' >> $GITHUB_ENV
        echo "$(pwd)/cache" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Create cache storage and cache key
      run: |
        mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        git submodule status > sm.txt

    - name: Process cache
      uses: actions/cache@v2
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        key: ${{ github.workflow }}-vcpkg-${{ hashFiles('sm.txt') }}-2

    - name: Configure CMake
      run: |
        cmake -B . -DCMAKE_BUILD_TYPE=Release         \
                   -DVCPKG_TARGET_TRIPLET=x64-linux   \
                   -DLONLY=ON                         \
                   -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Checkout shell test framework
      uses: actions/checkout@v3
      with:
        repository: kward/shunit2
        path: tests/shunit2
        fetch-depth: 1

    - name: Run additional tests
      run: tests/resources/lcheck.sh
