name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    
    - name: Install packages Ubuntu
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: sudo apt-get install libxml2-utils valgrind

    - name: Install packages MacOS
      if: ${{matrix.os == 'macos-latest'}}
      run: brew install argp-standalone && brew tap LouisBrunner/valgrind && brew install --HEAD LouisBrunner/valgrind/valgrind && brew install coreutils
      ### NO tests for Mac OS ###  run: brew install argp-standalone 

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}
      ### NO tests for Mac OS ### if: ${{matrix.os == 'ubuntu-latest'}}
      run: ./tests/resources/check_correctness.sh  -r -s && ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-corrupted/ -xN
      
