name: Ubuntu build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/alpine-build.yml'
      - '.github/workflows/macos-build.yml'
      - '.github/workflows/macos-arm64.yml'
      - '.github/workflows/ubuntu-arm64.yml'
      - '.github/workflows/windows-build.yml'
  pull_request:
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  Ubuntu-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install libxml2-utils valgrind

    - name: Configure CMake
      run: cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}}

    - name: Test well formed files
      working-directory: ${{github.workspace}}
      run: ./tests/resources/check_correctness.sh -r -s

    - name: Test corrupted files
      working-directory: ${{github.workspace}}
      run: ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-corrupted/ -xN

    - name: Test EA files
      working-directory: ${{github.workspace}}
      run: ./tests/resources/check_correctness.sh -r -s -e tests/resources/emf-ea/

  coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install libxml2-utils valgrind lcov

    - name: Install coveralls
      run: sudo pip install cpp-coveralls

    - name: Configure CMake
      run: cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=Debug -DGCOV=ON

    - name: Build
      run: make coverage

    - name: Report
      run: |
        coveralls \
          -t ${{ secrets.COVERALLS_REPO_TOKEN }} \
          -E '.*CMakeFiles.*' \
          -E '.*conv.*' \
          -E '.*uemf.*' \
          -E '.*upmf.*' \
          -E '.*goodies.*' \
          -E '.*tests.*' \
          --gcov-options '\-lp'
